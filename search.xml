<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo博客主题优化之next]]></title>
    <url>%2F2018%2F07%2F16%2Fhexo-next%2F</url>
    <content type="text"><![CDATA[如何个性化打造博客 Hexo主题–next下载安装next在你的博客站点根目录，打开命令行输入： 1git clone https://github.com/iissnan/hexo-theme-next themes/next 然后在 themes 文件夹里面就能看到下好的包含 next 主题的文件夹： 最后打开根目录下的 _config.yml 文件，找到 theme ，修改截图如下： 这样子 next 主题就下载安装好了，在根目录命令行输入： 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 然后打开 localhost:4000 看下你的新博客界面吧： 设置 next 的 schemenext 主题也有好几种风格，通过修改主题目录的 _config.yml 文件来改变风格，修改如下： 博客风格也就变成了： 设置菜单我们目前博客菜单才仅仅只有首页、归档两项，next 主题还内置了一些菜单栏可供挑选设置，打开主题目录的 _config.yml 文件，然后找到 menu ： 要设置的就把 # 去掉就行了。 这时候如果打开那几项菜单选项还是会出现 404 页面的，你还需要把这几个页面新建出来，通过在根目录命令行输入以下命令： 1hexo new page &quot;你要新建的菜单名字&quot; 然后就可以在根目录下的 source 文件夹中找到了： 在博客里的菜单选项也可以打开啦。 设置侧栏，头像，网页logo1.侧栏的设置：打开主题目录的 _config.yml 文件，找到 sidebar: 可以把 position 设置为 right 或 left设置成功截图如下： 2.头像的设置：打开主题目录的 _config.yml 文件，找到 avatar 后面加你头像的路径（最好把头像放到它原先设置的地方）设置成功截图如下： 3.网页logo的设置：打开主题目录的 _config.yml 文件，找到 favicon 把下面 medium 后面改成你的网页logo的文件。设置成功截图如下： 修改文章底部的那个带#号的标签修改模板 /themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;# ，将 # 换成 设置成功截图如下： 主页文章添加阴影效果打开 \themes\next\source\css_custom\custom.styl 文件,向里面加入： 12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 设置成功截图如下： 个性化设置点击桃心首先在 /themes/next/source/js/src 文件夹下新建一个 clicklove.js 文件，把下面这段代码复制进去： 1!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document); 然后修改 \themes\next\layout_layout.swig 文件，在末尾添加这段代码： 12&lt;!-- 页面点击小红心 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt; 这样子点击就会有小爱心出现啦。 设置成功截图如下： 头像旋转找到 /themes/next/source/css/_common/components/sidebar/sidebar-author.styl 文件，修改为以下代码： 1234567891011121314151617181920212223242526272829.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; border-radius: 60%; transition: 2.5s all; &#125;.site-author-image:hover &#123; transform: rotate(360deg);&#125;.site-author-name &#123; margin: $site-author-name-margin; text-align: $site-author-name-align; color: $site-author-name-color; font-weight: $site-author-name-weight;&#125;.site-description &#123; margin-top: $site-description-margin-top; text-align: $site-description-align; font-size: $site-description-font-size; color: $site-description-color;&#125; 这样子头像就变成圆形而且能够旋转了。]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello, blog!]]></title>
    <url>%2F2018%2F07%2F14%2FHello-blog-0%2F</url>
    <content type="text"><![CDATA[如何通过Github Pages + hexo搭建个人博客 搭建环境安装Node.js可以直接去官网下载安装，安装成功截图如下： 安装git可以直接去官网下载安装，安装成功截图如下： 安装hexo在自己认为合适的地方新建一个文件夹，我是在 E:/Notes/ 建了一个blog文件夹，然后通过命令行进入该文件夹内： 接着输入 npm install hexo -g 安装hexo，安装成功截图如下： 最后输入 hexo init 初始化文件夹，初始化好后输入 npm install 安装所需要的组件，文件夹如下： 现在你就可以体验一下hexo啦，输入 hexo g &amp;&amp; hexo s 启动服务器，默认端口为4000，所以打开浏览器，输入 http://localhost:4000 ，hexo界面就出现啦： 配置Github配置Github PagesGithub账户注册和新建项目，项目必须要遵守格式：账户名.github.io，不然接下来会有很多麻烦。并且需要勾选Initialize this repository with a README： 在建好的项目右侧有个settings按钮，点击它，向下拉到GitHub Pages，你会看到那边有个网址，访问它，你将会惊奇的发现该项目已经被部署到网络上，能够通过外网来访问它: 将Hexo与Github page联系起来首先要先配置github的ssh key（如果是第一次使用git），详情请见官方教程。 任意目录右键点击gitbash here，输入 ssh -T git@github.com 测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了，成功截图如下： 然后配置hexo，打开 blog/_config.yml ，在末尾找到 deploy: ，配置如下： 将其中的hcwnbs换成你自己创建的项目名就行了。 上传你的第一篇博客到此为止，所有的基本配置已经全部完成，接下来就可以写你的第一篇博客并上传啦！ 新建一篇博客在cmd执行命令： hexo new post “博客名” 这时候在文件夹_posts目录下将会看到已经创建的文件： 在生成以及部署文章之前，需要安装一个扩展：npm install hexo-deployer-git –save 使用编辑器编辑创建的 hello-hexo.md 文件，使用的是 markdown 语法这里推荐一个网页版的 markdown 编辑器，可以边预览边编辑，还有教程：Cmd Markdown编辑阅读器： 接下来只要输入 hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 就可以生成以及部署博客啦。部署成功后访问你的地址： http://用户名.github.io 。那么将看到生成的文章： 好啦，到此为止，一个个人博客就搭好啦，接下来如果想要好好布置你的博客，并实现各种个性化设置，请看博客布置篇。]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>npm</tag>
        <tag>基础</tag>
      </tags>
  </entry>
</search>
